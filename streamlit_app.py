
import streamlit as st

# Configura√ß√£o inicial da p√°gina
st.set_page_config(page_title="Dashboard de Leads", layout="wide")

# Importa√ß√£o dos scripts de p√°gina ap√≥s a configura√ß√£o inicial
from views import leads, asyncdata

# --- SIDEBAR SETUP ---
st.sidebar.markdown("# üìÅ Menu")
# Cria√ß√£o dos bot√µes de r√°dio para a navega√ß√£o
choice = st.sidebar.radio("Escolha uma p√°gina:", ['Conferir dados', 'Baixar dados'])

st.sidebar.markdown("### Notas")
st.sidebar.write("√â poss√≠vel fazer o download dos dados e visualizar os resultados em tempo real!")

# Condicional para executar p√°ginas espec√≠ficas com base na escolha
if choice == 'Conferir dados':
    # Carregar dados antecipadamente para que os filtros possam usar dados atualizados
    df_leads = leads.load_data_from_gsheet()

    # Cria√ß√£o de filtros no sidebar
    selected_sources = st.sidebar.multiselect('Select Source', options=df_leads['source'].unique(), default=df_leads['source'].unique())
    selected_stores = st.sidebar.multiselect('Select Store', options=df_leads['store'].unique(), default=df_leads['store'].unique())
    selected_categories = st.sidebar.multiselect('Select Category', options=df_leads['category'].unique(), default=df_leads['category'].unique())
    
    # Executar a fun√ß√£o run do m√≥dulo leads, passando os filtros selecionados
    leads.run(df_leads, selected_sources, selected_stores, selected_categories)
elif choice == 'Baixar dados':
    asyncdata.run()
